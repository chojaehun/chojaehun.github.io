/*/
// inviteyou mobile invitation 1.2.3  | http://inviteyou.co.kr/
/*/

var mapWidth, mapHeight, isRetina, isSolvedRetina, isControlMap;
var playAni, aniTime = motion['type'] ? (parseInt(1 / motion['spd'] * 100) / 100) : 0;
var startAni, lastAni = motion['type'] ? motion['frames'] : 0;
var aniPath = motion['type'] ? (rootPath + prdPath + 'motions/' + motion['type']) : '';
var sq = 'loop_';
var $topNotice, $topNoticeMsg;
var isTopNoticeOn = false;
var naviDelay = 10;
var naviDelayCnt;
var seledConnect = '';
var navigationFn;
var $bgm, $bgmBtn;
var isBgmLoadingForPlay, canBgmPlayThrough, isBgmPlaying = false;
var isBgmFirstNotice = true;
BgmfirstNoticeTime = 3000;
$(document).ready(function() {
    isRetina = false;
    isSolvedRetina = false;
    isControlMap = false;
    playAni = false;
    startAni = 0;
    nextAni = 1;
    naviDelayCnt = 0;
    initScreen();
    initScreenGb();
    // adjustRetina();
    $('img').load(function() {
        if (isSolvedRetina) {
            if (!$(this).hasClass('fit_width') && !$(this).hasClass('svg')) {
                var a = this.naturalWidth;
                var b = this.naturalHeight;
                if (isRetina) {
                    a = this.naturalWidth * 0.5;
                    b = this.naturalHeight * 0.5
                }
                $(this).attr({
                    'width': a,
                    'height': b
                })
            }
        }
    })
});
window.onload = function() {
    var c = $('#group_traffic');
    var d = $('#traffic_text');
    if (c.css('width') < d.css('width')) c.css('width', d.css('width'));
    $topNotice = $('#group_topNotice>div');
    $topNoticeMsg = $('#group_topNotice .text');
    hideImage();
    onloadImage();
    if (wMap['type'] && !wMap['isImgFirst']) chageMap();
    if ($('#group_dday').length > 0 && ddayDate != 'setDdayCompleted') dday(ddayDate);
    $("#group_navi ul").mouseout(function() {
        naviDelayCnt = naviDelay
    }).mouseover(function() {
        naviDelayCnt = naviDelay
    });
    $(document).on("scroll", function() {
        if ($('#group_navi').css('display') == 'none') {
            $('#group_navi').fadeIn('fast');
            if (!isBgmFirstNotice) $('#group_bgm>div').fadeIn('fast')
        }
        if (naviDelayCnt < naviDelay) naviDelayCnt = naviDelay;
        closePopup()
    });
    settingButtons();
    if (aniPath == '') $('#animationBg').remove();
    else loopAni();
    (function loopFunction() {
        if (wMap['type'] > 0) {
            var a = '';
            if (wMap['type'] == 1) {
                a = 'daum'
            } else if (wMap['type'] == 2) {
                a = 'google'
            }
            if ($('#location_map_zoom').css('display') != 'none') {
                var b = $('#location_map_zoom #' + a + 'Map').css('width');
                setControlMapSize();
                if (b != (mapWidth + 'px')) controlMapLoad()
            }
        }
        if ($('#group_dday').length > 0 && ddayDate != 'setDdayCompleted') dday(ddayDate);
        if (naviDelayCnt != 0) {
            if (naviDelayCnt > 1) naviDelayCnt -= 1;
            else {
                if (naviDelayCnt == 1) {
                    $('#group_navi').fadeOut('fast');
                    if (!isBgmFirstNotice) {
                        $('#group_bgm>div').fadeOut('fast')
                    }
                }
                naviDelayCnt = 0
            }
        }
        update();
        updateGb();
        setTimeout(loopFunction, 100)
    })();
    resizeScreen();
    resizeScreenGb();
    $(window).resize(function() {
        resizeScreen();
        resizeScreenGb()
    });
    initTools();
    if (bgmNum) initBgm()
};

function initTools() {
    Kakao.init('f8477a095c2d695d803124060fe8c3c3');
    window.fbAsyncInit = function() {
        FB.init({
            appId: '525814347793876',
            xfbml: true,
            version: 'v2.11'
        });
        FB.AppEvents.logPageView()
    };
    (function(d, s, a) {
        var b, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(a)) {
            return
        }
        b = d.createElement(s);
        b.id = a;
        b.src = "https://connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(b, fjs)
    }(document, 'script', 'facebook-jssdk'))
}

function hideImage() {
    if (wMap != undefined) {
        $('#location_map_zoom').css('display', 'none');
        $('#location_map_loading').css('display', 'none')
    }
}

function settingButtons() {
    var b = ['#top_locationBtn', '#group_location .scrollStop'];
    if ($(b[0]).length > 0 && $(b[1]).length > 0) $(makeFloatBtn(b[0], ($(b[0] + '>.wrapper').length > 0 ? b[0] + '>.wrapper' : undefined))).click(function() {
        scrollTo(b[1])
    });
    if (wMap['type']) {
        $('.location_map_click').click(function() {
            chageMap()
        });
        if ($('#location_map_btn').length) {
            var c = $('#location_map_btn').attr('src');
            if (c.search('zoom0') > -1) {
                c = replaceStr(c, '_zoom0', '_zoom' + wMap['useSimple']);
                $('#location_map_btn').attr('src', c)
            }
        }
    }
    $('#popup').click(function(a) {
        if ($(a.target).is("#popup")) closePopup()
    })
}
var prevAni;

function loopAni() {
    var a;
    if (!playAni) {
        var b;
        var c;
        for (var i = 0; i <= lastAni; i++) {
            if (i < 10) b = '00' + i;
            else if (i >= 10 && i < 100) b = '0' + i;
            else if (i >= 100) b = i;
            c = 'src="' + aniPath + '/' + sq + '00' + b + '.png"';
            $('#aniload').append('<img id="motionFrame' + i + '" class="fit_width" style="display: none" ' + c + '>')
        }
        if ($('#preload').length > 0) $('#preload').remove();
        playAni = true;
        loopAni()
    } else {
        $('#motionFrame' + startAni).css('display', '');
        if (prevAni != undefined) $('#motionFrame' + prevAni).css('display', 'none');
        prevAni = startAni;
        if (startAni < lastAni) startAni += nextAni;
        else if (startAni >= lastAni) startAni = 0;
        setTimeout(loopAni, aniTime * 1000)
    }
}

function chageMap() {
    isControlMap = !isControlMap;
    var a;
    if (isControlMap) {
        $('#location_map_loading').css('display', '');
        $('#location_map_zoom').css('display', '');
        a = replaceStr($('#location_map_btn').attr('src'), '_zoom', '_fix')
    } else {
        $('#location_map_loading').css('display', 'none');
        $('#location_map_zoom').css('display', 'none');
        a = replaceStr($('#location_map_btn').attr('src'), '_fix', '_zoom')
    }
    controlMapLoad();
    $('#location_map_btn').attr('src', a)
}

function setControlMapSize() {
    mapWidth = $('#location_map_img').width();
    mapHeight = $('#location_map_img').height();
    $('#location_map_loading').css('height', mapHeight)
}

function controlMapLoad() {
    setControlMapSize();
    if (isControlMap) {
        if (wMap['type'] == 1) {
            $('#location_map_zoom').html('<div id="daumMap" style="width:' + mapWidth + 'px;height:' + mapHeight + 'px;"></div>');
            var a = document.getElementById('daumMap');
            var b = {
                center: new daum.maps.LatLng(daumMap['centerY'], daumMap['centerX']),
                level: daumMap['level']
            };
            var c = new daum.maps.Map(a, b);
            var d = daumMap['pointer'],
                imageSize = new daum.maps.Size(daumMap['pointerW'], daumMap['pointerH']),
                imageOption = {
                    offset: new daum.maps.Point(daumMap['pointerInX'], daumMap['pointerInY'])
                };
            var e = new daum.maps.MarkerImage(d, imageSize, imageOption),
                markerPosition = new daum.maps.LatLng(wLoca['y'], wLoca['x']);
            var f = new daum.maps.Marker({
                position: markerPosition,
                image: e
            });
            f.setMap(c);
            var g = '<div class ="label outline-fff"><span class="left"></span><span class="center">' + wLoca['name'] + '</span><span class="right"></span></div>';
            var h = new daum.maps.LatLng(wLoca['y'], wLoca['x']);
            var i = new daum.maps.CustomOverlay({
                map: c,
                position: h,
                content: g,
                yAnchor: 3
            })
        } else if (wMap['type'] == 2) {
            $('#location_map_zoom').html('<div id="googleMap" class="fit_width" style="width:' + mapWidth + 'px;height:' + mapHeight + 'px;"></div>');
            var j = wLoca['y'];
            var k = wLoca['x'];
            var l = googleMap['level'];
            var m = wLoca['name'];
            var n = mapWidth;
            var o = {
                zoom: l,
                center: new google.maps.LatLng(j, k),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var c = new google.maps.Map(document.getElementById('googleMap'), o);
            var p = new google.maps.LatLng(j, k);
            var q = googleMap['pointerW'];
            var r = googleMap['pointerH'];
            var s = googleMap['pointerInX'];
            var t = googleMap['pointerInY'];
            var u = {
                url: googleMap['pointer'],
                anchor: new google.maps.Point(s, t),
                scaledSize: new google.maps.Size(q, r)
            };
            var f = new google.maps.Marker({
                position: p,
                map: c,
                icon: u,
                visibility: true,
                title: m
            });
            var g = '<div class ="label outline-fff" style="top:0px"><span class="left"></span><span class="center">' + wLoca['name'] + '</span><span class="right"></span></div>';
            var v = new google.maps.InfoWindow({
                content: g,
                maxWidth: n,
            });
            v.open(c, f);
            google.maps.event.addListener(f, 'click', function() {
                v.open(c, f)
            })
        }
    }
}

function adjustRetina() {
    isRetina = (window.devicePixelRatio > 1);
    if (!isSolvedRetina) {
        if (isRetina) {
            if (aniPath != '') aniPath += '@2x';
            $('img').each(function(i) {
                var a = $(this).attr('src');
                var b = a.split('.').pop();
                if ($(this).attr('id') != 'location_map_img') {
                    if (b == 'svg') {
                        $(this).addClass(b)
                    } else {
                        var c;
                        if (b == 'png') c = a.replace(".png", "@2x.png");
                        else if (b == 'gif') c = a.replace(".gif", "@2x.gif");
                        else if (b == 'jpg') c = a.replace(".jpg", "@2x.jpg");
                        $(this).attr('src', c)
                    }
                }
            })
        }
        isSolvedRetina = true
    }
}

function makeFloatBtn(a, b) {
    var c = 40;
    var d = (b == undefined) ? a + '>img' : b;
    var e = 0;
    var f = Number(replaceStr($(d).css('height'), 'px', ''));
    if (f < c) {
        e = (-parseInt((c - f) * 0.5)) + 'px';
        f = c + 'px'
    } else {
        e += 'px';
        f += 'px'
    }
    $(a).prepend('<div class="putOnBg_container"><div class="column1"><div></div></div></div>');
    $(a + ' div div div').css({
        'position': 'relative',
        'display': 'inline-block',
        'top': e,
        'width': $(d).css('width'),
        'height': f,
        'z-index': '30'
    });
    return a + ' div div div'
}

function replaceStr(a, b, c) {
    return a.replace(b, c)
}
var todayValue;

function dday(a) {
    var b;
    var c = todayValue;
    if (a == '') {
        b = -1;
        setDday(b);
        ddayDate = 'setDdayCompleted'
    } else if (a.slice(0, 2) == 'd-') {
        b = Number(a.slice(2));
        if (!isNaN(b)) setDday(b);
        ddayDate = 'setDdayCompleted'
    } else {
        var d = new Date();
        var e = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        d = new Date(e[d.getMonth()] + ' ' + d.getDate() + ' ' + d.getFullYear() + ' 00:00:00');
        var f = new Date(a);
        todayValue = d.toDateString();
        if (c != todayValue) {
            b = f.getTime() - d.getTime();
            b = Math.floor(b / (1000 * 60 * 60 * 24));
            setDday(b)
        }
    }
}

function ddayCalculator2(a, b) {
    var c = new Date();
    var d = new Date($('#test_name' + a.slice(2, 3)).html());
    if (b == undefined) {
        var e = new Date(monthEng[c.getMonth()] + ' ' + c.getDate() + ' ' + c.getFullYear() + ' 00:00:00');
        c = e;
        a += '-zero'
    }
    var f = d.getTime() - c.getTime();
    f = Math.floor(f / (1000 * 60 * 60 * 24));
    $('#test_value' + a).val(f)
}

function setDday(a) {
    var b;
    var c, str1x;
    if (a > 999) {
        $('#dday_title').css('display', '');
        $('#group_dday .100x').css('display', '');
        $('#group_dday .10x').css('display', '');
        $('#group_dday .1x').css('display', '');
        str100x = $('#group_dday .100x').attr('src');
        c = $('#group_dday .10x').attr('src');
        str1x = $('#group_dday .1x').attr('src');
        b = replaceStr(str100x, 'dday_0', 'dday_9');
        $('#group_dday .100x').attr('src', b);
        b = replaceStr(c, 'dday_0', 'dday_9');
        $('#group_dday .10x').attr('src', b);
        b = replaceStr(str1x, 'dday_0', 'dday_9');
        $('#group_dday .1x').attr('src', b)
    } else if (a <= 999 && a > 99) {
        $('#dday_title').css('display', '');
        $('#group_dday .100x').css('display', '');
        $('#group_dday .10x').css('display', '');
        $('#group_dday .1x').css('display', '');
        str100x = $('#group_dday .100x').attr('src');
        c = $('#group_dday .10x').attr('src');
        str1x = $('#group_dday .1x').attr('src');
        b = replaceStr(str100x, 'dday_0', 'dday_' + (Math.floor(a / 100)));
        $('#group_dday .100x').attr('src', b);
        b = replaceStr(c, 'dday_0', 'dday_' + (Math.floor(a / 10) % 10));
        $('#group_dday .10x').attr('src', b);
        b = replaceStr(str1x, 'dday_0', 'dday_' + (a % 10));
        $('#group_dday .1x').attr('src', b)
    } else if (a <= 99 && a > 9) {
        $('#dday_title').css('display', '');
        $('#group_dday .100x').css('display', 'none');
        $('#group_dday .10x').css('display', '');
        $('#group_dday .1x').css('display', '');
        c = $('#group_dday .10x').attr('src');
        str1x = $('#group_dday .1x').attr('src');
        b = replaceStr(c, 'dday_0', 'dday_' + (Math.floor(a / 10)));
        $('#group_dday .10x').attr('src', b);
        b = replaceStr(str1x, 'dday_0', 'dday_' + (a % 10));
        $('#group_dday .1x').attr('src', b)
    } else if (a <= 9 && a >= 0) {
        $('#dday_title').css('display', '');
        $('#group_dday .100x').css('display', 'none');
        $('#group_dday .10x').css('display', 'none');
        $('#group_dday .1x').css('display', '');
        str1x = $('#group_dday .1x').attr('src');
        b = replaceStr(str1x, 'dday_0', 'dday_' + a);
        $('#group_dday .1x').attr('src', b)
    } else {
        $('#group_dday').remove()
    }
}

function initBgm() {
    if ($('#group_bgm>audio>source').attr('src') == '') {
        topNoticeOn('배경음악 음원이 없습니다.', BgmfirstNoticeTime)
    } else {
        $bgm = $('#group_bgm>audio');
        $bgmBtn = $('#group_bgm .bgmBtnBox');
        $bgm.trigger('load')
    }
}

function bgmToggle() {
    naviDelayCnt = naviDelay;
    if (isBgmPlaying || isBgmLoadingForPlay) bgmStop();
    else if (!isBgmPlaying) bgmStart()
}

function canPlayThrough() {
    canBgmPlayThrough = true;
    if (isBgmAuto) {
        bgmStart();
        bgmNoticeOn('배경음악을 재생합니다.')
    } else bgmNoticeOn('배경음악 재생이 가능합니다.', BgmfirstNoticeTime)
}

function bgmStart(a) {
    if (!isBgmPlaying && !isBgmLoadingForPlay) {
        var b = $('.bgmBtnBg>img').attr('src');
        b = replaceStr(b, '_play', '_stop');
        $('.bgmBtnBg>img').attr('src', b);
        bgmPlayCheck()
    }
}
var bgmLoadingTimeout;

function bgmPlayCheck() {
    if (!canBgmPlayThrough && !isBgmLoadingForPlay) {
        isBgmLoadingForPlay = true;
        var a = '배경음악을 불러옵니다.';
        bgmNoticeOn(a)
    }
    if (canBgmPlayThrough) {
        clearTimeout(bgmLoadingTimeout);
        isBgmLoadingForPlay = false;
        $bgm[0].play();
        isBgmPlaying = true;
        var a = '배경음악을 재생합니다.';
        bgmNoticeOn(a, isBgmFirstNotice ? BgmfirstNoticeTime : 2000);
        $bgm.prop('volume', 0.1);
        bgmVolumeIncrease(0.1);
        return
    }
    bgmLoadingTimeout = setTimeout("bgmPlayCheck()", 500)
}

function bgmStop(a) {
    if (isBgmPlaying || isBgmLoadingForPlay) {
        clearTimeout(bgmLoadingTimeout);
        var b = $('.bgmBtnBg>img').attr('src');
        b = replaceStr(b, '_stop', '_play');
        $('.bgmBtnBg>img').attr('src', b);
        isBgmPlaying = false;
        $bgm[0].pause();
        bgmNoticeOn('배경음악을 종료합니다.', 2000)
    }
}
var bgmFirstTimeout;

function bgmNoticeOn(a, b) {
    if (isBgmFirstNotice) {
        $bgmBtn.show();
        topNoticeOn(a);
        bgmNoticeMotion('on');
        if (b != undefined) {
            clearTimeout(bgmFirstTimeout);
            bgmFirstTimeout = setTimeout("bgmNoticeOff()", b)
        }
    } else {}
}

function bgmNoticeOff() {
    if (isBgmFirstNotice) {
        clearTimeout(bgmFirstTimeout);
        topNoticeOff();
        bgmNoticeMotion('off');
        isBgmFirstNotice = false
    } else {
        topNoticeOff()
    }
}

function bgmNoticeMotion(a) {
    if (a == 'on') {
        var b = $('.content_bg').outerWidth() - 48;
        var c = $('#group_topNotice .text').outerWidth();
        var d = parseInt((b - c) * 0.5);
        if (d < 8) d = 8;
        $('#group_bgm .bgmBtnBox').css('right', d + 'px')
    } else if (a == 'off') {
        $('#group_bgm .bgmBtnBox').css('right', '8px');
        setTimeout('$("#group_bgm>div").css("display",$("#group_navi").css("display"))', 1000)
    }
}

function bgmVolumeIncrease(a) {
    var b = $bgm.prop('volume') + a;
    if (b > 0.9) {
        b = 1;
        return
    } else setTimeout("bgmVolumeIncrease(" + a + ")", 1000);
    $bgm.prop('volume', b)
}
var noticeTimeout;

function topNoticeOn(a, b) {
    isTopNoticeOn = true;
    clearTimeout(noticeTimeout);
    $topNotice.css('top', '0px');
    if (a != undefined) $topNoticeMsg.html(a);
    if (b != undefined) noticeTimeout = setTimeout("topNoticeOff()", b)
}

function topNoticeOff() {
    isTopNoticeOn = false;
    clearTimeout(noticeTimeout);
    $topNotice.css('top', '-40px')
}

function naviSet(a) {
    naviDelayCnt = naviDelay;
    switch (a) {
        case 'cover':
            pageScrollAni(0);
            break;
        case 'invitation':
            scrollTo('#group_invitation .scrollStop');
            break;
        case 'gallery':
            scrollTo('#group_gallery .scrollStop');
            break;
        case 'location':
            scrollTo('#group_location .scrollStop');
            break;
        case 'movie':
            scrollTo('#group_movie .scrollStop');
            break;
        case 'guestbook':
            scrollTo('#group_gb .scrollStop');
            break
    }
}

function openPopup(a, b) {
    if (cellularNum == 0 && a == 'cellular') return;
    if ($('#popup').css('display') == 'none') $('#popup').fadeIn('fast');
    switch (a) {
        case 'cellular':
            $('#popup_tapmenus .menu_cellular').addClass('seled');
            $('#popup_tapmenus .menu_sns').removeClass('seled');
            $('#popup_cellular').css('display', 'block');
            $('#popup_sns').css('display', 'none');
            $('#popup_confirm').css('display', 'block');
            settingCellular(b);
            break;
        case 'sns':
            $('#popup_tapmenus .menu_cellular').removeClass('seled');
            $('#popup_tapmenus .menu_sns').addClass('seled');
            $('#popup_cellular').css('display', 'none');
            $('#popup_sns').css('display', 'block');
            $('#popup_confirm').css('display', 'none');
            $('.popup_info').css('display', 'none');
            break;
        default:
    }
}

function closePopup() {
    if ($('#popup').css('display') != 'none') $('#popup').fadeOut('fast');
    seledConnect = '';
    $('#popup_cellular .seled').remove()
}

function settingCellular(a) {
    var b = true;
    if (oneCellular != '') {
        a = oneCellular
    } else {
        if (a == '' || a == undefined) {
            if (seledConnect == '') b = false;
            else a = seledConnect
        } else {
            if (a == seledConnect) b = false;
            $('#popup_cellular .seled').remove()
        }
    }
    if (b) {
        var c = window[a];
        if (c['tel'] == 'none' && c['msg'] == 'none') {
            b = false
        }
    }
    if (b) {
        $('.popup_info').css('display', 'none');
        $('#popup_confirm>.popup_separate').css('display', 'block');
        if (oneCellular == '') {
            btnStatus('#popup_cellular .wrapper', 9, 1);
            btnStatus('#popup_cellular .' + a, 1);
            $('#popup_cellular .seled').remove();
            $('#popup_cellular .' + a + ' a>div').append('<div class="seled"></div>')
        }
        if (c['tel'] != 'none') {
            btnStatus('#popup_confirm>ul li:nth-child(1)', 1);
            $('#popup_confirm>ul li:nth-child(1) a').attr('href', 'tel:' + c['tel'])
        } else btnStatus('#popup_confirm>ul li:nth-child(1)', 0);
        if (c['msg'] != 'none') {
            btnStatus('#popup_confirm>ul li:nth-child(2)', 1);
            $('#popup_confirm>ul li:nth-child(2) a').attr('href', 'sms:' + c['msg'])
        } else btnStatus('#popup_confirm>ul li:nth-child(2)', 0);
        if (c['tel'] != 'none' && c['msg'] != 'none') $('#popup_confirm .confirm_separate').css('display', 'inline-block');
        else $('#popup_confirm .confirm_separate').css('display', 'none');
        seledConnect = a
    } else {
        $('.popup_info').css('display', 'block');
        $('#popup_confirm>.popup_separate').css('display', 'none');
        $('#popup_confirm .confirm_separate').css('display', 'none');
        btnStatus('#popup_cellular .wrapper', 1);
        btnStatus('#popup_confirm>ul li', 0);
        seledConnect = ''
    }
}

function btnStatus(a, b, c) {
    switch (b) {
        case 0:
            $(a).css('display', 'none');
            $(a).css('opacity', '1');
            if (c == undefined) $(a).css('pointer-events', 'auto');
            break;
        case 1:
            if ($(a).css('display') == 'none') $(a).css('display', 'inline-block');
            $(a).css('opacity', '1');
            if (c == undefined) $(a).css('pointer-events', 'auto');
            break;
        case 9:
            if ($(a).css('display') == 'none') $(a).css('display', 'inline-block');
            $(a).css('opacity', '0.3');
            if (c == undefined) $(a).css('pointer-events', 'none');
            break
    }
    if (c != undefined) {
        var d = (c == 0) ? 'none' : 'auto';
        $(a).css('pointer-events', d)
    }
}

function connect_facebook() {
    var a = 'http://www.facebook.com/sharer.php';
    a += '?u=' + facebook['href'];
    window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}

function connect_kakaoTalk() {
    if (kakaoTalk['templateType'] != undefined && kakaoTalk['wFd'] != undefined && kakaoTalk['imageW'] != undefined && kakaoTalk['imageH'] != undefined) {
        if (kakaoTalk['templateType'] == "default") {
            Kakao.Link.sendDefault({
                objectType: 'feed',
                content: {
                    title: kakaoTalk['msgTitle'],
                    description: kakaoTalk['msgDescription'],
                    imageUrl: kakaoTalk['image'],
                    imageWidth: kakaoTalk['imageW'],
                    imageHeight: kakaoTalk['imageH'],
                    link: {
                        mobileWebUrl: kakaoTalk['url'],
                        webUrl: kakaoTalk['url']
                    }
                },
                buttons: [{
                    title: kakaoTalk['btnLabel'],
                    link: {
                        mobileWebUrl: kakaoTalk['url'],
                        webUrl: kakaoTalk['url']
                    }
                }]
            })
        } else if (kakaoTalk['templateType'] == "addLink") {
            var a = kakaoTalk['btn2Label'];
            var b = kakaoTalk['btn2Url'];
            var c = kakaoTalk['btn2Url_mobile'];
            if (noValue(a)) a = '버튼명 없음';
            if (noValue(b)) {
                if (!noValue(c)) b = c;
                else {
                    alert('2번째버튼 연결이 없습니다.');
                    return
                }
            } else if (noValue(c)) c = b;
            Kakao.Link.sendDefault({
                objectType: 'feed',
                content: {
                    title: kakaoTalk['msgTitle'],
                    description: kakaoTalk['msgDescription'],
                    imageUrl: kakaoTalk['image'],
                    imageWidth: kakaoTalk['imageW'],
                    imageHeight: kakaoTalk['imageH'],
                    link: {
                        mobileWebUrl: kakaoTalk['url'],
                        webUrl: kakaoTalk['url']
                    }
                },
                buttons: [{
                    title: kakaoTalk['btnLabel'],
                    link: {
                        mobileWebUrl: kakaoTalk['url'],
                        webUrl: kakaoTalk['url']
                    }
                }, {
                    title: a,
                    link: {
                        mobileWebUrl: c,
                        webUrl: b
                    }
                }]
            })
        } else if (kakaoTalk['templateType'] == "location") {
            Kakao.Link.sendDefault({
                objectType: 'location',
                address: wLoca['address'],
                addressTitle: wLoca['name'],
                content: {
                    title: kakaoTalk['msgTitle'],
                    description: kakaoTalk['msgDescription'],
                    imageUrl: kakaoTalk['image'],
                    imageWidth: kakaoTalk['imageW'],
                    imageHeight: kakaoTalk['imageH'],
                    link: {
                        mobileWebUrl: kakaoTalk['url'],
                        webUrl: kakaoTalk['url']
                    }
                },
                buttons: [{
                    title: kakaoTalk['btnLabel'],
                    link: {
                        mobileWebUrl: kakaoTalk['url'],
                        webUrl: kakaoTalk['url']
                    }
                }]
            })
        } else alert('카카오링크 템플릿이 존재하지 않습니다.')
    } else alert('카카오톡 연결에 실패하였습니다.')
}

function connect_kakaoStory() {
    Kakao.Story.open({
        url: kakaoStory['url'],
        text: kakaoStory['text']
    })
}

function connect_kakaoNavi() {
    if (wLoca['name'] != undefined && wLoca['x'] != undefined && wLoca['y'] != undefined) {
        Kakao.Navi.start({
            name: wLoca['name'],
            x: wLoca['x'],
            y: wLoca['y'],
            coordType: 'wgs84'
        })
    } else alert('카카오내비 연결에 실패하였습니다.')
}

function connect_naverLine() {
    var a = 'http://line.me/R/msg/text/';
    a += '?' + encodeURIComponent(naverLine['text']);
    window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}

function connect_naverBand() {
    var a = 'http://band.us/plugin/share';
    a += '?route=' + naverBand['route'];
    a += '&body=' + encodeURIComponent(naverBand['body']);
    window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}

function connect_twitter() {
    var a = 'https://twitter.com/intent/tweet';
    a += '?url=' + encodeURIComponent(twitter['url']);
    a += '&text=' + encodeURIComponent(twitter['text']);
    window.open(a, '', 'width=750,height=400,scrollbars=yes,resizable=auto')
}

function scrollTo(a) {
    if (isNaN(a)) var b = $(a).offset().top;
    else var b = a;
    pageScrollAni(b)
}

function pageScrollAni(a, b) {
    if (b == undefined) b = 'html, body';
    $(b).animate({
        scrollTop: a
    }, 500)
}

function displayOnOff(a) {
    var b = $(a);
    if (b.css('display') == 'none') b.css('display', '');
    else b.css('display', 'none');
    pageScrollAni(document.body.scrollHeight)
}

function noValue(a) {
    if (a == '' || a == undefined) return true;
    else return false
}

function initScreen() {}

function resizeScreen() {}

function update() {}

function updateGb() {}

function initScreenGb() {}

function resizeScreenGb() {}

function onloadImage() {}
